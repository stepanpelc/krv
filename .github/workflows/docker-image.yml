---
name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

    - name: 'Get next minor version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "version: .*"
        replace: "version: ${{ steps.semvers.outputs.patch }}"
        include: "**Chart.yaml"
        regex: true

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "appVersion: .*"
        replace: "appVersion: ${{ steps.semvers.outputs.patch }}"
        include: "**Chart.yaml"
        regex: true


    - name: Push changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "Automaticaly update version to ${{ steps.semvers.outputs.patch }}"
        skip_checkout: false
        skip_fetch: false

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.semvers.outputs.patch }}
        release_name: Release ${{ steps.semvers.outputs.patch }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false

    - name: 'Create new milestone'
      id: createmilestone
      uses: "WyriHaximus/github-action-create-milestone@v1"
      with:
        title: ${{ steps.semvers.outputs.patch }}
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    
    - name: Build and Push to DockerHub
      uses: MaximilianoBz/dockerhub-buildpush@v1.1
      with:
        registry_url: docker.io
        repository_name: krv
        user_name: stepanpelc
        password: ${{ secrets.dockerhub_secret }}
        image_version: "${{ steps.semvers.outputs.patch }}"

    - name: Push Helm chart to OCI compatible registry (Github)
      uses: bsord/helm-push@v4.1.0
      with:
        useOCIRegistry: true
        registry-url:  oci://registry-1.docker.io/stepanpelc
        username: stepanpelc
        access-token: ${{ secrets.dockerhub_secret }}
        force: true
        chart-folder: helmchart/krv
