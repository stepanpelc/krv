---
name: Docker and Helm Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  prepare-release:
  
    runs-on: self-hosted

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:  
      patch:  ${{ steps.semvers.outputs.patch }}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get Previous tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.0.0

    - name: Get next minor version
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}

    - name: Find and Replace in Chart version
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "version: .*"
        replace: "version: ${{ steps.semvers.outputs.patch }}"
        include: "**Chart.yaml"
        regex: true

    - name: Find and Replace in Chart version
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "appVersion: .*"
        replace: "appVersion: ${{ steps.semvers.outputs.patch }}"
        include: "**Chart.yaml"
        regex: true

    - name: Find and Replace in Helm Chart values
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "tag: .*"
        replace: "tag: ${{ steps.semvers.outputs.patch }}"
        include: "**values.yaml"
        regex: true


    - name: Add version to issue template
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "### VERSION"
        replace: "      - ${{ steps.semvers.outputs.patch }}\n### VERSION"
        include: "**bug_report.yml"
        regex: true


    - name: Push changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "Automaticaly update version to ${{ steps.semvers.outputs.patch }}"
        skip_checkout: false
        skip_fetch: false

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.semvers.outputs.patch }}
        release_name: Release ${{ steps.semvers.outputs.patch }}
        draft: false
        prerelease: false

    - name: 'Create new milestone'
      id: createmilestone
      uses: "WyriHaximus/github-action-create-milestone@v1"
      with:
        title: ${{ steps.semvers.outputs.patch }}
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  build-docs:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      # Use GitHub Actions' cache to cache dependencies on servers
      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      # Use GitHub Deploy Action to build and deploy to Github
      # For latest version: `jeffreytse/jekyll-deploy-action@master`
      - uses: jeffreytse/jekyll-deploy-action@v0.5.0
        with:
          provider: 'github'         # Default is github
          token: ${{ secrets.GITHUB_TOKEN }} # It's your Personal Access Token(PAT)
          ssh_private_key: ''        # It's your SSH private key (SSH approach)
          repository: ''             # Default is current repository
          branch: 'master'         # Default is gh-pages for github provider
          jekyll_src: './docs'           # Default is root directory
          jekyll_cfg: '_config.yml'  # Default is _config.yml
          jekyll_baseurl: ''         # Default is according to _config.yml
          bundler_ver: '>=0'         # Default is latest bundler version
          cname: ''                  # Default is to not use a cname
          actor: ''                  # Default is the GITHUB_ACTOR
          pre_build_commands: ''     # Installing additional dependencies (Arch Linux)



  build:
    runs-on: self-hosted
    needs: prepare-release
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    
    - name: Build and Push to DockerHub
      uses: MaximilianoBz/dockerhub-buildpush@v1.1
      with:
        registry_url: ${{ vars.IMAGE_REPO_URL }}
        repository_name: ${{ vars.IMAGE_REPO_NAME }}
        user_name: ${{ vars.IMAGE_REPO_USER }}
        password: ${{ secrets.dockerhub_secret }}
        image_version: "${{ needs.prepare-release.outputs.patch }}"

    - name: Push Helm chart to OCI compatible registry (Github)
      uses: bsord/helm-push@v4.1.0
      with:
        useOCIRegistry: true
        registry-url:  ${{ vars.HELM_REPO_URL }}
        username:  ${{ vars.HELM_REPO_USER }}
        access-token: ${{ secrets.dockerhub_secret }}
        force: true
        chart-folder: helmchart/krv
